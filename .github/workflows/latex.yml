name: Compile LaTeX

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  LaTeX:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: wtfjoke/setup-tectonic@v3
    
    - name: Build main document
      run: tectonic main.tex

    - name: Build unit PDFs
      run: |
        sed -e 's/{{unit}}/cv/g;s/{{UNIT}}/COMPUTER VISION/g' unit_template.tex > cv_unit.tex
        sed -e 's/{{unit}}/dl/g;s/{{UNIT}}/DEEP LEARNING/g' unit_template.tex > dl_unit.tex
        sed -e 's/{{unit}}/lm/g;s/{{UNIT}}/LANGUAGE MODELING/g' unit_template.tex > lm_unit.tex
        sed -e 's/{{unit}}/ml/g;s/{{UNIT}}/MACHINE LEARNING/g' unit_template.tex > ml_unit.tex
        sed -e 's/{{unit}}/rl/g;s/{{UNIT}}/REINFORCEMENT LEARNING/g' unit_template.tex > rl_unit.tex
        parallel tectonic {} ::: cv_unit.tex dl_unit.tex lm_unit.tex ml_unit.tex rl_unit.tex

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: PDF
        path: main.pdf

    - name: Fetch Just the docs theme
      run: git clone https://github.com/just-the-docs/just-the-docs-template /tmp/just-the-docs

    - name: Update PDF branch
      run: |
        # Move the PDF to a temporary location
        mv main.pdf cv_unit.pdf dl_unit.pdf lm_unit.pdf ml_unit.pdf rl_unit.pdf /tmp

        # Remove generated tex files
        rm cv_unit.tex dl_unit.tex lm_unit.tex ml_unit.tex rl_unit.tex
        
        # Configure git credentials
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'

        git fetch --all
        
        # Check if the PDF branch already exists
        ret_val=$( git ls-remote --heads origin refs/heads/PDF | wc -l )
        if [ $ret_val -eq 1 ]; then
          # Switch to the existing branch
          git switch PDF
        else
          # Create a new orphan branch
          git checkout --orphan PDF
          # Remove all files from the new orphan branch
          git rm -rf .
        fi
        
        # copy pdfs over
        cp /tmp/main.pdf 'I2 Grimoire.pdf'
        # copy each unit
        mkdir -p units
        cp /tmp/cv_unit.pdf './units/Computer Vision.pdf'
        cp /tmp/dl_unit.pdf './units/Deep Learning.pdf'
        cp /tmp/lm_unit.pdf './units/Language Modeling.pdf'
        cp /tmp/ml_unit.pdf './units/Machine Learning.pdf'
        cp /tmp/rl_unit.pdf './units/Reinforcement Learning.pdf'

        # Set CNAME
        echo 'grimoire.uw-i2.org' > CNAME

        # Setup Just the Docs
        cp -r /tmp/just-the-docs/* .

        # Perform some edits
        cat << EOF > _config.yml
        title: I2 Grimoire
        description: The I2 textbook on Artificial Intelligence
        theme: just-the-docs

        url: https://grimoire.uw-i2.org

        aux_links:
          I2 Website: https://uw-i2.org
          Intro Course: https://course.uw-i2.org
          
        search_enabled: false
        EOF

        cat << EOF > index.md
        ---
        title: I2 Grimoire
        layout: minimal
        ---
        # I2 Grimoire ðŸ“š

        ## [Main PDF](./I2%20Grimoire.pdf)
        
        ## Units
        
        <ul>
        {% for file in site.static_files %}
          {% if file.path contains '/units/' and file.extname == ".pdf" %}
            <li><a href="{{ file.path | relative_url }}">{{ file.name | replace: '.pdf', '' }}</a></li>
          {% endif %}
        {% endfor %}
        </ul>
        EOF
        
        # Add and commit changes
        git add .
        git commit -m "Update PDF (${{ github.sha }})"
        
        # Push changes to the origin
        git push -u origin PDF

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: LaTeX
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "PDF"
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
